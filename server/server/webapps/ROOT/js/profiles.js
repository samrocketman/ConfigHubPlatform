angular.module("configHub.repository.profiles",[]).controller("SecureGroupsController",["$scope","$http","$stateParams","$filter","secretService","$rootScope","store","$state",function(i,e,g,d,c,f,h,a){i.account=g.owner;
i.repoName=g.name;
i.initialized=false;
i.message="";
i.profiles=[];
f.selectedTab=2;
var b=h.get("pageSize");
i.newSecurityProfile=function(){a.go("repo.new-security-group",{owner:i.account,name:i.repoName})
};
e.get("/rest/getSecurityProfiles/"+i.account+"/"+i.repoName).then(function(j){i.initialized=true;
if(j.data.success){i.profiles=j.data.groups
}else{i.message=j.data.message
}});
i.getProfile=function(j){a.go("repo.security-profile",{owner:i.account,name:i.repoName,profile:j.name})
};
i.reverse=false;
i.currentPage=1;
i.pageSize=b?b:10;
i.pageSizes={sizes:[{id:10,name:"10"},{id:25,name:"25"},{id:50,name:"50"}],selectedOption:{id:i.pageSize,name:i.pageSize}};
i.pageSizeUpdate=function(){h.set("pageSize",i.pageSizes.selectedOption.name)
}
}]).controller("NewSecureGroupController",["$scope","$rootScope","$http","$httpParamSerializer","$stateParams","secretService","$state",function(c,a,g,e,f,b,d){c.account=f.owner;
c.repoName=f.name;
a.selectedTab=2;
c.CipherConfig={create:false,valueField:"cipher",labelField:"title",searchField:["title"],closeAfterSelect:false,openOnFocus:true,maxItems:1};
c.ciphers=ciphers;
c.aProfile={};
c.aProfile.cipher=c.ciphers[0].cipher;
c.saveSecurityProfile=function(){g({method:"POST",url:"/rest/createSecurityProfile/"+c.account+"/"+c.repoName,data:e({name:c.aProfile.name,password:c.aProfile.password,password2:c.aProfile.password2,cipher:c.aProfile.cipher?c.aProfile.cipher:""}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(h){if(h.data.success){b.cache(c.aProfile.name,c.aProfile.password);
d.go("repo.security-profiles",{owner:c.account,name:c.repoName})
}else{c.message=h.data.message
}})
};
c.cancelNewSp=function(){d.go("repo.security-profiles",{owner:c.account,name:c.repoName})
}
}]).controller("SecureGroupController",["$scope","$http","$stateParams","$filter","secretService","$rootScope","$state","$httpParamSerializer","editorInit",function(k,h,j,g,c,i,a,f,d){k.account=j.owner;
k.repoName=j.name;
k.profileName=j.profile;
k.tsFormat=tsFormat;
k.initialized=false;
k.message="";
k.profiles=[];
k.aProfile={};
k.passive=true;
i.selectedTab=2;
k.ciphers=ciphers;
k.CipherConfig={create:false,valueField:"cipher",labelField:"title",searchField:["title"],closeAfterSelect:false,openOnFocus:true,maxItems:1};
k.files=[];
k.tokens=[];
k.hideTokenEdit=true;
k.isLive=function(){return true
};
d.setState("securityProfile");
var b;
h({method:"POST",url:"/rest/getSecurityGroup/"+k.account+"/"+k.repoName,data:f({profile:k.profileName}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(l){if(l.data.success){if(!k.aProfile.cipher){k.aProfile.cipher=" "
}k.aProfile=l.data.profile;
k.isPrivAccount=l.data.privAcc;
k.aProfile.f={name:k.aProfile.name,cipher:k.aProfile.cipher};
k.files=l.data.files;
k.tokens=l.data.tokens;
k.count=k.aProfile.keys?k.aProfile.keys.length:0;
d.initialize(k)
}else{k.message=l.data.message
}k.initialized=true
});
k.editProfile=function(){if(k.aProfile.edit){return
}k.aProfile.f={name:k.aProfile.name,cipher:k.aProfile.cipher};
k.aProfile.edit=true
};
k.cancelEdit=function(){a.go("repo.security-profiles",{owner:k.account,name:k.repoName})
};
k.updateProfile=function(){if(k.aProfile.showChangePasswordForm&&k.aProfile.f.currPassword){e(k.aProfile.f.currPassword)
}else{c.authAndExec(k,null,k.aProfile.f.name,function(){e(c.get(k.aProfile.f.name))
})
}};
k.withOldPass=true;
function e(l){b={profile:k.aProfile.f.name,newName:k.aProfile.name,oldPass:l,cipher:k.aProfile.cipher?k.aProfile.cipher:""};
h({method:"POST",url:"/rest/updateSecurityProfile/"+k.account+"/"+k.repoName,data:f(b),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(m){if(m.data.success){k.cancelEdit()
}else{k.aProfile.message=m.data.message
}})
}k.changePassword=function(){c.updateSPPassword(k,k.aProfile.name,function(){k.cancelEdit()
}).show()
};
k.deleteProfile=function(){c.getSKModal(k,null,k.aProfile.name,function(){h({method:"POST",url:"/rest/deleteSecurityProfile/"+k.account+"/"+k.repoName,data:f({name:k.aProfile.name,password:c.get(k.aProfile.name)}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(l){console.log(l);
if(l.data.success){c.clear(k.aProfile.name);
a.go("repo.security-profiles",{owner:k.account,name:k.repoName})
}else{k.aProfile.message=l.data.message
}})
}).show()
};
k.getFile=function(l){a.go("repo.file",{owner:k.account,name:k.repoName,id:l.id,fullPath:l.fullPath,sp:l.sp})
};
k.reverse=false;
k.currentPage=1;
k.pageSizes={sizes:[{id:10,name:"10"},{id:25,name:"25"},{id:50,name:"50"}],selectedOption:{id:10,name:"10"}};
k.count=0
}]).filter("securityKeyFilter",function(){return function(f,c){if(!c||c.length==0){return f
}var e=[],d=[],g=false,l,h,b,k,a,j;
for(l=0;
l<c.length;
l++){h=c[l].replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");
e.push(new RegExp(h,"i"))
}for(b=0;
b<f.length;
b++){k=f[b];
g=false;
for(a in e){j=e[a];
if(j.test(k.key)||j.test(k[1].readme)||j.test(k[1].spName)){d.push(k);
g=true;
break
}}}return d
}
});