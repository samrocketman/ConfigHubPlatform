angular.module("configHub.repository.entry",[]).directive("repoEntry",function(){return{restrict:"A",templateUrl:"repo/entry.tpl.html",scope:true,controller:["$scope","$rootScope","$window","$timeout","$state","secretService",function(q,o,c,d,a,f){q.hover=false;
q.entry.allValues=false;
q.entry.f={k:{0:{},1:{},2:{}}};
q.valueSorter=q.keySorters?q.keySorters[0]:null;
q.entry.currentPage=1;
q.entry.itemsPerPage=20;
q.entry.paginateId="ent"+q.entry.id;
q.entry.currPath=1;
q.setSorter=function(r){if(q.valueSorter.srt===r.srt){q.valueSorter.asc=!q.valueSorter.asc
}else{q.valueSorter=r
}};
q.gotoCi=function(r,s){a.go("repo.contextItem",{owner:q.account,name:q.repoName,depthLabel:q.getRepoContext(s).depths[r.p].label,contextItem:r.n})
};
q.gotoSp=function(r){a.go("repo.security-profiles",{owner:q.account,name:q.repoName,profile:r})
};
q.enableValueEditor=function(s,r){if(!q.isValueEditable(s,r)){return
}c.getSelection().removeAllRanges();
s.isEdited=true
};
var n,p,g,e,l=-1,j=-1,b,k,h,i;
q.disableValueEditor=function(s,r){if(q.entry.newProperty&&s.stickyForm){q.hideNewPropertyForm();
q.resetNewPropertyForm();
return
}else{if(q.entry.standalone&&s.stickyForm){n=o.getLastLocation();
if(!n||!n.name||n.name===a.name||!o.goToLastLocation()){a.go("repo.editor",{owner:q.account,name:q.repoName})
}return
}}q.hover=false;
d(function(){s.isEdited=false
},100);
if(s.id===j){m(r)
}if(s.isNew){d(function(){q.entry.properties.shift()
},slideTime+10)
}};
q.showKeyLinks=function(r){if(q.ut==q.type.demo){return true
}if(q.ut<q.type.demo){return false
}return q.isLive(r)
};
q.enableKeyEditor=function(r){if(q.ut<q.type.demo){return false
}if(q.entry.f.k[r].isEdited){return
}if(!q.isLive(r)){return
}c.getSelection().removeAllRanges();
q.entry.f.k[r].isEdited=true
};
q.addValue=function(r){if(q.entry.properties&&q.entry.properties.length>0&&q.entry.properties[0].isNew){return
}p={id:-1,isNew:true,value:"",isEdited:false,editable:true,active:true,levels:[]};
if(1==r){q.entry.properties.unshift(p)
}else{g={isNew:true};
g[r]=p;
q.entry.properties.unshift(g)
}d(function(){p.isEdited=true
},slideTime)
};
q.toggleAllValues=function(s,r){if(q.entry.newProperty){q.getAllValuesForDetachedEntry(q.getKey(q.side),q.entry,!q.entry.allValues)
}else{if(s&&!q.entry.allValues){q.resolveEntries(q.entry.key,q.entry.f.k[r].key,!q.entry.allValues,q.entry,null,q.account,q.repoName)
}else{if(q.entry.allValues&&(!q.localSearch&&q.searchQuery&&q.searchQuery.length>0)){}else{q.resolveEntry(q.getKey(q.side),!q.entry.allValues)
}}}};
q.toggleDecryption=function(r){if(q.entry.f.k[r].decrypted){q.resolveEntry(q.entry.key,q.entry.allValues);
q.entry.f.k[r].decrypted=false;
return
}e=q.getDate(r);
f.authAndExec(q,e,q.entry[r].spName,function(){q.resolveEntry(q.entry.key,q.entry.allValues,f.get(q.entry[r].spName,e));
q.entry.f.k[r].decrypted=true
})
};
function m(r){if(l>=0&&q.entry.properties[l]){b=1==r?q.entry.properties[l]:q.entry.properties[l][r];
if(b.isEdited){return
}b.attn="";
if(!q.entry.allValues){k=b.type;
if(k!="self"&&k!="match"){q.entry.properties.pop()
}}}l=-1;
j=-1
}q.toggleConflict=function(t,s,r){m(s);
if(!r){return
}j=t.id;
switch(s){case 0:case 2:l=indexOfCmpProperty(q.entry.properties,r,s);
if(l>=0){q.entry.properties[l][s].attn=r.attn
}else{r.type="outOfContext";
g={score:r.score};
g[s]=r;
l=q.entry.properties.push(g)-1
}break;
case 1:l=indexOfProperty(q.entry.properties,r);
if(l>=0){q.entry.properties[l].attn=r.attn
}else{r.type="outOfContext";
l=q.entry.properties.push(r)-1
}break
}};
q.getEntryData=function(r){h={};
if(q.entry.newProperty){h.key=q.entry.f.k[r].key;
h.spName=q.entry.f.k[r].keydata.spName;
h.vdt=q.entry.f.k[r].keydata.vdt;
h.pushEnabled=q.entry.f.k[r].keydata.pushEnabled;
h.comment=q.entry.f.k[r].keydata.readme;
h.deprecated=q.entry.f.k[r].keydata.deprecated
}else{h.key=q.entry.key;
h.spName=q.entry[r].spName;
h.vdt=q.entry[r].vdt;
h.pushEnabled=q.entry[r].pushEnabled;
h.comment=q.entry[r].comment;
h.deprecated=q.entry[r].deprecated
}return h
};
q.getKey=function(r){return q.entry.newProperty?q.entry.f.k[r].key:q.entry.key
};
q.getSpName=function(r){return q.entry.newProperty?q.entry.f.k[r].keydata.spName:q.entry[r].spName
};
q.entryUpdatePostValueModification=function(r){q.postValueModification(r,q.entry.allValues,function(){if(q.entry.newProperty){q.getAllValuesForDetachedEntry(q.entry.key,q.entry,q.entry.allValues)
}else{angular.forEach(i,function(s){s.validateContext()
})
}})
};
i=[];
q.addValueScope=function(r){i.push(r)
};
q.removeValueScope=function(r){i.splice(i.indexOf(r),1)
}
}]}
}).directive("keyEditor",function(){return{restrict:"A",templateUrl:"repo/keyForm.tpl.html",scope:true,controller:["$rootScope","$scope","$http","$timeout","secretService","focus","$httpParamSerializer",function(j,l,i,c,e,o,g){l.errorType="";
l.errorMessage="";
l.merging=null;
l.invalidKey=keyError;
l.entry.f.k[l.side].key=l.entry.key;
l.entry.f.k[l.side].keydata={};
angular.copy(l.entry[l.side],l.entry.f.k[l.side].keydata);
o("key_"+l.side+"_"+(l.entry.newProperty?"new":l.entry.id));
var d,b,a,f,n,h={type:"Text",sp:"",push:false},m;
l.mergingTag=function(){if(l.merging&&l.merging.merging){return"merged"
}return""
};
l.entry.f.k[l.side].keydata.isKeyEditable=true;
if(!l.entry.newProperty){i({method:"GET",url:"/rest/isKeyEditable/"+l.account+"/"+l.repoName+"/"+l.entry.f.k[l.side].key,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(p){l.entry.f.k[l.side].keydata.isKeyEditable=p.data
})
}l.disableKeyEditor=function(){if(l.entry.newProperty){l.hideNewPropertyForm();
l.resetNewPropertyForm();
return
}if(l.merging&&l.entry.allValues){l.toggleAllValues(l.merging.merging,l.side)
}l.entry.f.k[l.side]={}
};
l.saveKey=function(){d=l.entry.f.k[l.side].keydata.spName;
b=l.entry[l.side].spName;
f=angular.element(document.querySelector("#changeCommentField")).length>0;
if(!b&&!d){k()
}else{if(b===d){e.authAndExec(l,null,b,k)
}else{if(!b){e.authAndExec(l,null,d,k)
}else{if(!d){e.authAndExec(l,null,b,k)
}else{e.authSwitchAndExec(l,d,b,k)
}}}}};
function k(){a={key:l.entry.f.k[l.side].key,comment:l.entry.f.k[l.side].keydata.readme,deprecated:l.entry.f.k[l.side].keydata.deprecated,pushEnabled:l.entry.f.k[l.side].keydata.pushEnabled,spName:l.entry.f.k[l.side].keydata.spName,vdt:l.entry.f.k[l.side].keydata.vdt,newSpPassword:e.get(l.entry.f.k[l.side].keydata.spName),currentPassword:e.get(l.entry[l.side].spName),changeComment:f?l.changeComment:""};
l.errorMessage="";
i({method:"POST",url:"/rest/updateKey/"+l.account+"/"+l.repoName+"/"+l.entry.key,data:g(a),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(p){if(p.data.success){l.entry.f.k[l.side].isEdited=false;
n=l.entry.f.k[l.side].key!=l.entry.key;
if(n){l.postValueModification(l.entry.f.k[l.side].key,l.entry.allValues);
l.$emit("keyUpdated",{from:l.entry.key,to:l.entry.f.k[l.side].key})
}l.entryUpdatePostValueModification(l.entry.key);
if(l.postKeySaveCallback){l.postKeySaveCallback(n,l.entry.f.k[l.side].key)
}}else{l.errorMessage=p.data.message
}})
}l.toggleAllValuesForEditedKey=function(){l.toggleAllValues(l.merging?l.merging.merging:false,l.side)
};
l.getKeys=function(p){return i.get("/rest/keySearch/"+l.account+"/"+l.repoName,{params:{t:p}}).then(function(q){return q.data
})
};
l.updateKey=function(p){l.entry.f.k[l.side].key=p;
l.keyChange()
};
l.chooseSP=function(p){h.sp=p?p.name:"";
l.entry.f.k[l.side].keydata.spName=h.sp
};
l.chooseVdt=function(p){h.type=p;
l.entry.f.k[l.side].keydata.vdt=h.type
};
l.choosePush=function(p){h.pushEnabled=p;
l.entry.f.k[l.side].keydata.pushEnabled=h.pushEnabled
};
l.attributeLock=false;
l.keyChange=function(){if(l.merging&&l.entry.allValues){l.toggleAllValues(l.merging.merging,l.side)
}if(l.entry.key===l.entry.f.k[l.side].key){l.merging=null;
l.errorType="";
l.errorMessage="";
l.attributeLock=false;
return
}l.errorType="";
i({method:"POST",url:"/rest/validateKey/"+l.account+"/"+l.repoName,data:g({fromKey:l.entry.key,toKey:l.entry.f.k[l.side].key}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(p){l.merging=p.data;
l.errorType=l.merging.error;
l.attributeLock=p.data.attributeLock;
if(l.entry.newProperty){if(p.data.spName){l.entry.f.k[l.side].keydata.spName=p.data.spName
}else{l.entry.f.k[l.side].keydata.spName=h.sp
}if(p.data.vdt){l.entry.f.k[l.side].keydata.vdt=p.data.vdt
}else{l.entry.f.k[l.side].keydata.vdt=h.type
}if(p.data.pushEnabled){l.entry.f.k[l.side].keydata.pushEnabled=p.data.pushEnabled
}else{l.entry.f.k[l.side].keydata.pushEnabled=h.pushEnabled
}}})
};
l.deleteAllValues=function(){m=l.getSpName(l.side);
e.authAndExec(l,null,m,function(){i({method:"POST",url:"/rest/deleteKeyAndProperties/"+l.account+"/"+l.repoName,data:g({key:l.entry.key,spPassword:e.get(m)}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(p){if(p.data.success){l.entry.f.k[l.side].isEdited=false;
if(l.entry.f.k[l.side].key!=l.entry.key){l.postValueModification(l.entry.f.k[l.side].key,l.entry.allValues)
}c(function(){l.entryUpdatePostValueModification(l.entry.key)
},slideTime);
if(l.postKeyDeleteCallback){l.postKeyDeleteCallback()
}}else{l.errorMessage=p.data.message
}})
})
}
}]}
}).directive("valueEditor",function(){return{restrict:"A",templateUrl:"repo/valueForm.tpl.html",scope:true,controller:["$scope","$http","secretService","$httpParamSerializer","focus","$timeout",function(r,A,b,z,p,y){r.addValueScope(r);
r.validType=true;
r.listData=[""];
r.mapData=[{p:["",""]}];
r.contextSelectConfig=r.canManageContext?propContextSelectConfig:propContextSelectConfigNoEdit;
var o,s,u,v,B,f,j,g,l,n,w,d,m,x=r.value,h=function(){var e=m.getScreenLength()*d.renderer.lineHeight+d.renderer.scrollBar.getWidth();
if(e>500){return
}w=angular.element(document.querySelector("#li_"+r.side+"_"+(r.property.id?r.property.id:"n")));
w.height(e.toString()+"px");
d.resize()
};
r.aceLoaded=function(e){d=e;
d.setTheme("ace/theme/github");
m=d.getSession();
m.setUseWrapMode(true);
m.on("change",h);
d.setReadOnly(false);
y(function(){h();
p("li_"+r.side+"_"+(r.property.id?r.property.id:"n"))
},100)
};
r.getFiles=function(e){return A.get("/rest/fileSearch/"+r.account+"/"+r.repoName,{params:{t:e}}).then(function(i){return i.data
})
};
r.setNull=function(){x=r.value;
r.value=null;
g=r.getEntryData(r.side);
if(g.vdt=="List"){x=r.listData;
r.listData=null
}else{if(g.vdt=="Map"){x=r.mapData;
r.mapData=null
}}q(g.vdt)
};
r.setNonNull=function(){if(x){r.value=x
}else{r.value=""
}g=r.getEntryData(r.side);
if(g.vdt=="List"){if(x){r.listData=x
}}else{if(g.vdt=="Map"){if(x){r.mapData=x
}}}q(g.vdt)
};
function c(e){if(r.entry[r.side].vdt=="Boolean"){r.value=e;
if(e){r.value="true"==e
}}else{if(r.entry[r.side].vdt=="List"){r.value=e;
if(e){r.listData=angular.copy(e)
}}else{if(r.entry[r.side].vdt=="Map"){r.value=e;
if(e){o=angular.copy(e);
r.mapData=[];
for(s in o){r.mapData.push({p:[s,o[s]]})
}}}else{r.value=e
}}}}c(r.property.value);
r.active=r.property.active;
r.context={};
for(u in r.property.levels){v=r.property.levels[u].p;
B=r.property.levels[u].n?r.property.levels[u].n:"";
r.context[v]=B
}function q(e){switch(e){case"Integer":case"Long":r.validateInt(r.value);
break;
case"Double":case"Float":r.validateDouble(r.value);
break;
case"Map":r.validateMap();
break;
default:r.validType=true;
break
}}r.validateInt=function(e){if(null==e){r.validType=true
}else{r.validType=IntType.test(e)
}};
r.validateDouble=function(e){if(null==e){r.validType=true
}else{r.validType=DecType.test(e)
}};
r.addListItem=function(){r.listData.push("")
};
r.removeListItem=function(e){r.listData.splice(e,1);
p("li_"+r.side+"_"+(r.property.id?r.property.id:"n")+"_"+(e-1))
};
r.addMapItem=function(){r.mapData.push({p:["",""]});
p("mp_"+r.side+"_"+(r.property.id?r.property.id:"n")+"_"+(r.mapData.length-1));
r.validateMap()
};
r.removeMapItem=function(e){r.mapData.splice(e,1);
p("mp_"+r.side+"_"+(r.property.id?r.property.id:"n")+"_"+(e-1));
r.validateMap()
};
r.validateMap=function(){o={};
f=true;
for(j in r.mapData){s=r.mapData[j].p[0];
if(!s){r.mapData[j].err=true;
f=false
}else{if(o[s]){o[s].v.err=r.mapData[j].err=true;
f=false
}else{r.mapData[j].err=false;
o[s]={v:r.mapData[j]}
}}}r.validType=f
};
r.decodeMessage="";
r.property.decriptValidated=false;
r.decryptValue=function(){b.authAndExec(r,null,r.entry[r.side].spName,function(){A({method:"POST",url:"/rest/decryptValue/"+r.account+"/"+r.repoName,data:z({propertyId:r.property.id,spPassword:b.get(r.entry[r.side].spName)}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(e){r.decodeMessage=e.data.message;
r.property.decriptValidated=e.data.success;
if(e.data.success){c(e.data.value)
}else{r.errorMessage=e.data.message
}})
})
};
r.saveValue=function(){if(r.demo){return
}g=r.getEntryData(r.side);
if(g.vdt=="List"){if(!r.listData||r.listData.length==0){r.value=null
}else{r.value=JSON.stringify(r.listData)
}}else{if(g.vdt=="Map"){if(!r.mapData||r.mapData.length==0){r.value=null
}else{o={};
for(u in r.mapData){o[r.mapData[u].p[0]]=r.mapData[u].p[1]
}r.value=JSON.stringify(o)
}}}l=angular.element(document.querySelector("#changeCommentField")).length>0;
b.authAndExec(r,null,g.spName,function(){A({method:"POST",url:"/rest/saveProperty/"+r.account+"/"+r.repoName,data:z({key:g.key,comment:g.comment,deprecated:g.deprecated,vdt:g.vdt,pushEnabled:g.pushEnabled,value:r.value,active:r.active,context:contextParam(r.context),changeComment:l?r.changeComment:"",propertyId:r.property.id,spPassword:b.get(g.spName),spName:g.spName}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(e){if(!e.data.success){if(e.data.circularRef){r.circularRef=e.data.circularRef;
r.errorMessage=null
}else{r.errorMessage=e.data.message;
r.circularRef=null
}}else{r.conflictProperty=null;
r.conflict=false;
r.entryUpdatePostValueModification(r.getKey(r.side));
r.disableValueEditor(r.property,r.side);
if(r.postValueSaveCallback){r.postValueSaveCallback()
}}})
})
};
r.deleteValue=function(){if(r.demo){return
}n=r.getSpName(r.side);
b.authAndExec(r,null,n,function(){A({method:"POST",url:"/rest/deleteProperty/"+r.account+"/"+r.repoName,data:z({id:r.property.id,spPassword:b.get(n)}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(e){if(!e.data.success){r.errorMessage=e.data.message
}else{r.disableValueEditor(r.property,r.side);
r.entryUpdatePostValueModification(r.entry.key);
if(r.postValueDeleteCallback){r.postValueDeleteCallback(r.entry)
}}})
})
};
r.validateContext=function(){if(r.demo||!r.active){return
}A({method:"POST",url:"/rest/contextChange/value/"+r.account+"/"+r.repoName,data:z({context:contextParam(r.context),key:r.getKey(r.side),propertyId:r.property.id}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(e){if(e.data.success){r.conflict=e.data.conflict;
if(r.conflict){r.conflictProperty=e.data.conflictProperty
}else{r.conflictProperty=null
}r.toggleConflict(r.property,r.side,r.conflictProperty)
}else{r.errorMessage=e.data.message
}})
};
r.$watch("active",function(i,e){r.validateContext()
},true);
if(r.entry.newProperty){r.$watch("entry.f.k[side].key",function(i,e){r.validateContext()
},true);
r.$watch("entry.f.k[side].keydata.vdt",function(i,e){q(i)
},true)
}else{r.validateContext()
}r.toggleConflictProperty=function(){r.toggleConflict(r.property,r.side,r.conflictProperty)
};
r.$on("$destroy",function a(){r.removeValueScope(r)
})
}]}
});