angular.module("configHub.repository.teams",["ui.sortable"]).controller("TeamsController",["$scope","$stateParams","$http","contextService","$filter","$modal","store","$state","$httpParamSerializer","$rootScope",function(r,o,m,f,k,p,q,b,j,n){r.initialized=false;
r.teams=[];
r.aTeam={};
r.accessControlEnabled=false;
n.selectedTab=3;
r.account=o.owner;
r.repoName=o.name;
r.repoContext={loaded:false};
f.contextElements(r.date,null,r.account,r.repoName).then(function(i){r.repoContext=i;
r.repoContext.loaded=true
});
var l=k("orderBy"),g,h,a,d,c,e=[];
r.TeamSelectConfig={create:false,valueField:"name",labelField:"name",searchField:["name"],closeAfterSelect:false,openOnFocus:true,maxItems:1};
r.teamChanged=function(){r.findAndSelectTeam(r.selectedTeam)
};
m.get("/rest/getTeams/"+r.account+"/"+r.repoName).then(function(i){if(i.data){r.accessControlEnabled=i.data.accessControlEnabled;
r.teams=l(i.data.teams,"name");
g=-1;
if(o.team){g=indexOf(r.teams,"name",o.team)
}if(g>-1){r.selectTeam(r.teams[g])
}else{r.selectTeam(r.teams[0])
}}r.initialized=true
});
r.findAndSelectTeam=function(i){for(g=0;
g<r.teams.length;
g++){if(r.teams[g].name===i){r.selectTeam(r.teams[g]);
break
}}};
r.selectTeam=function(i){r.allMembersToggle=false;
if(!i){i={newTeam:true}
}if(r.aTeam.selected&&r.aTeam.name===i.name){return
}if(r.aTeam){if(r.aTeam.d){r.aTeam.d.sortingEnabled=false
}r.aTeam.selected=false
}r.aTeam=i;
r.aTeam.selected=true;
r.selected=null;
r.selectedMember={};
r.memberMessage="";
if(r.aTeam.newTeam){return
}m.get("/rest/teamInfo/"+r.account+"/"+r.repoName+"/"+i.name).then(function(s){if(s.data.success){r.aTeam.d=s.data.team;
if(r.aTeam.d.accessRule){r.aTeam.d.originalOrder=r.aTeam.d.accessRules.map(function(t){return t.id
}).join(",");
r.aTeam.d.beforeSortItems=r.aTeam.d.accessRules.slice();
r.aTeam.d.reordered=false;
r.aTeam.d.sortingEnabled=false
}b.go("repo.teams",{owner:r.account,name:r.repoName,team:i.name},{notify:false})
}else{r.message=s.data.message
}r.initialized=true
})
};
r.deleteTeamNow=function(){m({method:"POST",url:"/rest/deleteTeam/"+r.account+"/"+r.repoName,data:j({team:r.aTeam.name}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(i){if(i.data.success){r.teams=i.data.teams;
r.teams=l(i.data.teams,"name");
r.selectTeam(r.teams[0])
}else{r.aTeam.teamMessage=i.data.message
}})
};
r.allMembersToggle=false;
r.allMembers=[];
r.showAllMembers=function(){m.get("/rest/getAllMembers/"+r.account+"/"+r.repoName).then(function(i){r.allMembers=i.data.members;
r.count=r.allMembers.length;
r.allMembersToggle=true;
if(r.aTeam){r.aTeam.selected=false
}})
};
r.getUsers=function(i){return m.get("/rest/userSearch",{params:{t:i}}).then(function(s){return s.data
})
};
r.selected="";
r.selectedMember={};
r.selectMember=function(u,s,t){r.selectedMember=s;
r.memberMessage=""
};
r.addMemberToTeam=function(i){r.memberMessage="";
h=i.un?i.un:i;
m({method:"POST",url:"/rest/addMember/"+r.account+"/"+r.repoName+"/"+r.aTeam.name,data:j({un:h}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(s){if(!s.data.success){if(s.data.multiple){r.selectedMember.memberOf=s.data.team;
r.selectedMember.un=h;
r.memberMessage=""
}else{r.memberMessage=s.data.message
}}else{r.aTeam.d.members=s.data.members;
r.selected=null;
r.selectedMember={}
}})
};
r.removeMember=function(i){m({method:"POST",url:"/rest/removeMember/"+r.account+"/"+r.repoName+"/"+r.aTeam.name,data:j(i),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(s){if(!s.data.success){r.memberMessage=s.data.message
}else{r.aTeam.d.members=s.data.members
}})
};
r.moveToTeam=function(s,i){m({method:"POST",url:"/rest/moveMemberToTeam/"+r.account+"/"+r.repoName,data:j({un:s,all:r.allMembersToggle,toTeam:i,fromTeam:r.aTeam.name}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(t){if(!t.data.success){r.memberMessage=t.data.message
}else{if(r.allMembersToggle){r.allMembers=t.data.members
}else{r.selected=null;
r.selectedMember={};
r.aTeam.d.members=t.data.members
}}})
};
r.newTeam=function(){if(r.aTeam){a=r.aTeam
}r.selectTeam({newName:"",newTeam:true,name:"",members:[],accessRules:[]})
};
r.cancel=function(){if(a){r.selectTeam(a)
}};
r.team={};
r.createTeam=function(){m({method:"POST",url:"/rest/createTeam/"+r.account+"/"+r.repoName,data:j({name:r.aTeam.newName}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(i){if(i.data.success){r.teams=i.data.teams;
for(g in r.teams){if(r.teams[g].name===r.aTeam.newName){r.selectTeam(r.teams[g]);
break
}}}else{r.aTeam.teamMessage=i.data.message
}})
};
r.renameTeam=function(){if(!r.aTeam.newName){r.aTeam.newName=r.aTeam.name
}m({method:"POST",url:"/rest/renameTeam/"+r.account+"/"+r.repoName+"/"+r.aTeam.name,data:j({newName:r.aTeam.newName}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(i){if(i.data.success){r.aTeam.name=r.aTeam.newName;
delete r.aTeam.newName
}r.aTeam.teamMessage=i.data.message
})
};
r.cancelRename=function(){if(r.aTeam.newTeam){}else{delete r.aTeam.newName
}};
r.genRuleProcessTypes=genRuleProcessTypes;
r.editGenRuleStop=function(){r.aTeam.d.orgStopOnFirstMatch=r.aTeam.d.stopOnFirstMatch;
r.aTeam.d.isEditingGenRuleStop=true
};
r.cancelGenRuleStop=function(){r.aTeam.d.stopOnFirstMatch=r.aTeam.d.orgStopOnFirstMatch;
r.aTeam.d.isEditingGenRuleStop=false
};
r.updateGenRuleStop=function(){m({method:"POST",url:"/rest/updateStopOnFirstMatchedRule/"+r.account+"/"+r.repoName+"/"+r.aTeam.name,data:j({stopOnFirstMatch:r.aTeam.d.stopOnFirstMatch}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(i){if(!i.data.success){r.rulesMessage=i.data.message
}else{r.aTeam.d.stopOnFirstMatch=i.data.stopOnFirstMatch;
r.aTeam.d.isEditingGenRuleStop=false
}})
};
r.editGenUnprocessedMatch=function(){r.aTeam.d.orgUnmatchedEditable=r.aTeam.d.unmatchedEditable;
r.aTeam.d.isEditingUnprocessedMatch=true
};
r.cancelGenUnprocessedMatch=function(){r.aTeam.d.unmatchedEditable=r.aTeam.d.orgUnmatchedEditable;
r.aTeam.d.isEditingUnprocessedMatch=false
};
r.updateGenUnprocessedMatch=function(){m({method:"POST",url:"/rest/updateUnmatchedEditableRule/"+r.account+"/"+r.repoName+"/"+r.aTeam.name,data:j({unmatchedEditable:r.aTeam.d.unmatchedEditable}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(i){if(!i.data.success){r.rulesMessage=i.data.message
}else{r.aTeam.d.unmatchedEditable=i.data.unmatchedEditable;
r.aTeam.d.isEditingUnprocessedMatch=false
}})
};
r.types=["Key","Value"];
r.typeLabel={Key:"Key",Value:"Context"};
r.keyMatches={Is:"Is",Contains:"Contains",StartsWith:"Starts with",EndsWith:"Ends with"};
r.ctxMatches={ContainsAny:"Contains any",ContainsAll:"Contains all",DoesNotContain:"Does not contain",Resolves:"Resolves",DoesNotResolve:"Does not resolve"};
r.accessType={ro:"Read-Only",rw:"Read/Write"};
r.rule={type:"",match:"",key:"",context:{},access:"ro"};
r.switchRuleType=function(i){r.rule.type=i;
switch(i){case r.types[0]:r.rule.match="Contains";
break;
case r.types[1]:r.rule.match="Resolves";
break
}};
r.clearRuleForm=function(){r.newRuleFormVisible=false;
r.rule={type:"",match:"",key:"",context:{},access:"ro"}
};
r.editRule=function(i){d={};
angular.copy(i,d);
i.original=d;
i.isEdited=true
};
r.cancelRuleEdit=function(i){d=i.original;
angular.copy(d,i);
i.isEdited=false
};
r.newRuleFormVisible=false;
r.enableNewRuleForm=function(){r.newRuleFormVisible=true
};
r.contextSelectConfig={create:false,plugins:["remove_button"],valueField:"name",labelField:"name",searchField:["name"],delimiter:",",placeholder:"*",closeAfterSelect:false,openOnFocus:true,sortField:"name"};
r.createRule=function(){c={};
angular.copy(r.rule,c);
if(c.context){c.context=contextParam(c.context)
}m({method:"POST",url:"/rest/createAccessRule/"+r.account+"/"+r.repoName+"/"+r.aTeam.name,data:j(c),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(i){if(!i.data.success){r.rulesMessage=i.data.message
}else{r.clearRuleForm();
r.aTeam.d.accessRules=i.data.accessRules
}})
};
r.deleteRule=function(i){m({method:"POST",url:"/rest/deleteAccessRule/"+r.account+"/"+r.repoName+"/"+r.aTeam.name,data:j({id:i.id}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(s){if(!s.data.success){r.rulesMessage=s.data.message
}else{r.aTeam.d.accessRules=s.data.accessRules
}})
};
r.updateRule=function(i){c={};
angular.copy(i,c);
if(c.context){c.context=contextParam(c.context)
}m({method:"POST",url:"/rest/updateAccessRule/"+r.account+"/"+r.repoName+"/"+r.aTeam.name,data:j(c),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(s){if(!s.data.success){r.rulesMessage=s.data.message
}else{r.aTeam.d.accessRules=s.data.accessRules
}})
};
r.cancelSorting=function(){r.aTeam.d.sortingEnabled=false;
r.aTeam.d.accessRules=r.aTeam.d.beforeSortItems
};
r.sortableOptions={start:function(){r.aTeam.d.beforeSortItems=r.aTeam.d.accessRules.slice()
},update:function(s,i){},stop:function(s,i){e=r.aTeam.d.accessRules.map(function(t){return t.id
}).join(",");
r.aTeam.d.reordered=!angular.equals(e,r.aTeam.d.originalOrder)
},items:"li:not(.not-sortable)"};
r.saveOrder=function(){m({method:"POST",url:"/rest/reorderAccessRules/"+r.account+"/"+r.repoName+"/"+r.aTeam.name,data:j({order:e}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(i){if(!i.data.success){r.rulesMessage=i.data.message
}else{r.aTeam.d.accessRules=i.data.accessRules;
r.aTeam.d.sortingEnabled=false;
r.aTeam.d.originalOrder=r.aTeam.d.accessRules.map(function(s){return s.id
}).join(",");
r.aTeam.d.beforeSortItems=r.aTeam.d.accessRules.slice()
}})
};
r.currentPage=1;
if(q.get("userPageSize")){r.pageSize=q.get("userPageSize")
}else{r.pageSize=10
}r.count=0;
r.pageSizeUpdate=function(){q.set("userPageSize",r.pageSize)
};
r.showPagination=function(){return count>10
}
}]).filter("memberFilter",function(){return function(b,a){if(!a||a.length==0){return b
}var c=[],e=[],g,d,f;
angular.forEach(a,function(h){g=h.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");
e.push(new RegExp(g,"i"))
});
angular.forEach(b,function(h){for(d in e){f=e[d];
if(f.test(h.un)||f.test(h.name)||f.test(h.team)){c.push(h);
break
}}});
return c
}
}).directive("genRuleProcessUnmatched",function(){return{restrict:"A",templateUrl:"/repo/team/genRuleProcessUnmatched.tpl.html",scope:true,controller:[function(){}]}
}).directive("genRuleStop",function(){return{restrict:"A",templateUrl:"/repo/team/genRuleStop.tpl.html",scope:true,controller:[function(){}]}
}).directive("keyRuleEntry",function(){return{restrict:"A",templateUrl:"/repo/team/keyRuleEntry.tpl.html",scope:true,controller:[function(){}]}
}).directive("valueRuleEntry",function(){return{restrict:"A",templateUrl:"/repo/team/valueRuleEntry.tpl.html",scope:true,controller:[function(){}]}
});