angular.module("configHub.repository.tokens",["monospaced.elastic","ngAnimate","puElasticInput","chart.js"]).controller("TokenController",["$timeout","$stateParams","$scope","$http","$httpParamSerializer","secretService","$rootScope","store","$filter",function(a,n,p,l,g,d,m,o,j){p.account=n.owner;
p.repoName=n.name;
m.selectedTab=1;
p.initialized=false;
p.reverse=false;
p.sortField="name";
p.tokens=[[],[],[]];
p.groups=[];
p.tsFormat=tsFormat;
p.accessControlEnabled=false;
p.showAll=false;
p.showAllToggle=function(){p.showAll=!p.showAll;
p.fetchTokens()
};
var e,c=o.get("pageSize"),b,f=0,k=[],i,h;
p.fetchTokens=function(){l({method:"GET",url:"/rest/tokenFetchAll/"+p.account+"/"+p.repoName+"?all="+p.showAll}).then(function(r){p.initialized=true;
e=r.data;
if(e.success){p.isAdmin=e.isAdmin;
p.accessControlEnabled=e.accessControlEnabled;
p.teamMember=e.teamMember;
p.teams=e.teams;
p.groups=e.groups;
k=e.tokens;
q(k)
}else{p.errorMessage=e.message
}})
};
function q(r){h=j("orderObjectBy")(r,"name",false);
f=0;
p.tokens=[[],[],[]];
if(r.length>0){for(b in h){p.tokens[f++].push(h[b]);
if(f>=3){f=0
}}}}p.showToken=function(r){r.show=!r.show
};
p.searchTokens=function(r){i=j("tokenFilter")(k,r);
q(i)
};
p.reverse=false;
p.currentPage=1;
p.pageSize=c?c:10;
p.pageSizes={sizes:[{id:10,name:"10"},{id:25,name:"25"},{id:50,name:"50"}],selectedOption:{id:p.pageSize,name:p.pageSize}};
p.pageSizeUpdate=function(){o.set("pageSize",p.pageSizes.selectedOption.name)
};
p.newToken={};
p.initNewToken=function(){p.newToken={edited:true,isNew:true,editable:true,f:{expires:null,name:"",active:true,addSps:[],removeSps:[],managedBy:"User"},dateTimeForm:false,expires:null,name:"",active:true}
};
p.initNewToken();
p.fetchTokens();
p.newTokenEnabled=false;
p.addToken=function(){p.newTokenEnabled=true
};
p.cancelAddToken=function(){p.newTokenEnabled=false;
p.errorMessage=""
}
}]).directive("token",function(){return{restrict:"A",templateUrl:"repo/tokens/tokenForm.tpl.html",scope:true,controller:["$scope","secretService","$httpParamSerializer","$http","toUtc","$filter",function(o,d,h,k,n,j){var l={},c,e,p,m,g,f,a,b;
o.SGConfig=angular.copy(SGConfig);
delete o.SGConfig.maxItems;
o.SGConfig.plugins=["remove_button"];
o.SGConfig.render={item:function(q,i){return"<div>"+('<span class="spnl">'+i(q.name)+"</span>")+"</div>"
},option:function(q,i){m=q.name,g=q.cipher?q.cipher:null;
return'<div><span class="spnl">'+i(m)+"</span>"+(g?'<span class="spcl">| Encryption: '+i(g)+"</span>":'<span class="spcl">| Encryption: disabled</span>')+"</div>"
}};
o.SGConfig.onInitialize=function(i){o.token.f.spsSelector=i
};
o.SGConfig.onItemRemove=function(i){if(!o.token.f.spsSelector||o.token.f.processing){return
}f=o.token.sps?o.token.sps.indexOf(i)!=-1:true;
if(f){o.token.f.processing=true;
d.authAndExec(o,null,i,function(){l[i]=d.get(i);
o.token.f.removeSps.push(i);
e=o.token.f.addSps.indexOf(i);
if(-1!=e){o.token.f.addSps.splice(e,1)
}o.token.f.processing=false
},function(){o.token.f.spsSelector.addItem(i,true);
o.token.f.sps.push(i);
o.token.f.processing=false
})
}else{e=o.token.f.addSps.indexOf(i);
if(-1!=e){o.token.f.addSps.splice(e,1)
}e=o.token.f.removeSps.indexOf(i);
if(-1!=e){o.token.f.removeSps.splice(e,1)
}}};
o.SGConfig.onItemAdd=function(i){if(!o.token.f.spsSelector||o.token.f.processing){return
}f=o.token.sps?o.token.sps.indexOf(i)==-1:true;
if(f){o.token.f.processing=true;
d.authAndExec(o,null,i,function(){l[i]=d.get(i);
o.token.f.addSps.push(i);
e=o.token.f.removeSps.indexOf(i);
if(-1!=e){o.token.f.removeSps.splice(e,1)
}o.token.f.processing=false
},function(){o.token.f.spsSelector.removeItem(i,true);
o.token.f.processing=false
})
}else{e=o.token.f.addSps.indexOf(i);
if(-1!=e){o.token.f.addSps.splice(e,1)
}e=o.token.f.removeSps.indexOf(i);
if(-1!=e){o.token.f.removeSps.splice(e,1)
}}};
p;
o.toggleDateTimeForm=function(){o.token.f.dateTimeForm=true
};
o.clearDate=function(){o.token.f.dateTimeForm=false;
o.token.f.expires=""
};
o.getTokeDate=function(){if(null==o.token.expires){return"Never"
}else{return j("date")(o.token.date,"EEEE, MMMM d, y @ h:mm a")
}};
o.setExpirationNever=function(){o.showCustomDate=false;
o.token.f.expires=null
};
o.setExpirationDays=function(i){o.showCustomDate=false;
b=new Date();
b.setDate(b.getDate()+i);
b.setMinutes(0);
b.setMinutes(0);
b.setSeconds(0);
b.setMilliseconds(0);
o.token.f.expires=b
};
o.showCustomDate=false;
o.setCustomExpiration=function(){o.showCustomDate=true
};
o.editToken=function(){if(o.token.f){delete o.token.f
}o.token.f=angular.copy(o.token);
o.token.f.addSps=[];
o.token.f.removeSps=[];
if(o.token.expires){o.token.f.expires=new Date(o.token.expires)
}o.token.edited=true
};
o.deleteToken=function(){k({method:"POST",url:"/rest/deleteToken/"+o.account+"/"+o.repoName,data:h({tokenId:o.token.id}),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(i){if(i.data.success){o.fetchTokens()
}else{o.errorMessage=i.data.message
}})
};
o.selectPushOverride=function(i){o.token.f.forceKeyPushEnabled=i
};
o.setAccessRulesTeam=function(i){o.token.f.rulesTeam=i
};
o.selectVisibleByAuthor=function(){o.token.f.managedBy="User";
o.token.f.user=o.user().username;
o.token.f.managingTeam=null
};
o.selectVisibleByAdmins=function(){if(!o.isAdmin){return
}o.token.f.managedBy="Admins";
o.token.f.managingTeam=null;
o.token.f.user=null
};
o.selectVisibleByEveryone=function(){if(!o.isAdmin){return
}o.token.f.managedBy="All";
o.token.f.managingTeam=null;
o.token.f.user=null
};
o.selectVisibleByTeam=function(i){if(!o.isAdmin&&i!=o.teamMember){return
}o.token.f.managedBy="Team";
o.token.f.managingTeam=i;
o.token.f.user=null
};
o.save=function(){a={expires:o.token.f.expires?n.toMS(o.token.f.expires):null,id:o.token.f.id?o.token.f.id:null,name:o.token.f.name,active:o.token.f.active,forceKeyPushEnabled:o.token.f.forceKeyPushEnabled,addSps:o.token.f.addSps?o.token.f.addSps.join(","):"",removeSps:o.token.f.removeSps?o.token.f.removeSps.join(","):"",managedBy:o.token.f.managedBy,managingTeam:o.token.f.managingTeam,rulesTeam:o.token.f.rulesTeam,newOwner:o.token.f.user};
for(e in o.token.f.addSps){c=o.token.f.addSps[e];
d.authAndExec(o,null,c,function(){a[c]=d.get(c)
})
}for(e in o.token.f.removeSps){c=o.token.f.removeSps[e];
d.authAndExec(o,null,c,function(){a[c]=d.get(c)
})
}k({method:"POST",url:"/rest/saveOrUpdateToken/"+o.account+"/"+o.repoName,data:h(a),headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(i){if(i.data.success){o.token.edited=false;
o.cancelAddToken();
if(o.token.isNew){o.initNewToken()
}o.fetchTokens()
}else{o.errorMessage=i.data.message
}})
};
o.cancel=function(){o.token.edited=false;
o.errorMessage=""
}
}]}
});